{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","pattern","RegExp","NewMovie","state","newTitle","newDescription","newImgUrl","newImdbUrl","newImdbID","buttonDisabled","isTitleValid","isImgUrlValid","isImdbUrlValid","isImdbIDValid","handleChange","event","target","name","value","setState","trim","validateOnBlurTitle","validateOnBlurImdbID","validateOnBlurImdbUrl","test","validateOnBlurImgUrl","resetInputedData","isButtonDisabled","length","addMovie","preventDefault","props","onChange","this","placeholder","onBlur","classNames","hidden","type","onClick","disabled","Component","App","moviesFromServer","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6e500e3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line\nconst pattern = new RegExp('^((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)?[A-Za-z0-9.-]+|(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)((?:\\\\/[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)#?(?:[.!/\\\\\\\\\\\\w]*))?)$');\n\nexport class NewMovie extends Component {\n  state = {\n    newTitle: '',\n    newDescription: '',\n    newImgUrl: '',\n    newImdbUrl: '',\n    newImdbID: '',\n    buttonDisabled: true,\n    isTitleValid: true,\n    isImgUrlValid: true,\n    isImdbUrlValid: true,\n    isImdbIDValid: true,\n  };\n\n  handleChange = (event) => {\n    const { target: { name, value } } = event;\n\n    this.setState({\n      [name]: value.trim(),\n    });\n  }\n\n  validateOnBlurTitle = (event) => {\n    if (event.target.value.trim() === '') {\n      this.setState({ isTitleValid: false });\n    } else {\n      this.setState({ isTitleValid: true });\n    }\n  }\n\n  validateOnBlurImdbID = (event) => {\n    if (event.target.value.trim() === '') {\n      this.setState({ isImdbIDValid: false });\n    } else {\n      this.setState({ isImdbIDValid: true });\n    }\n  }\n\n  validateOnBlurImdbUrl = (event) => {\n    if (!pattern.test(event.target.value)) {\n      this.setState({ isImdbUrlValid: false });\n    } else {\n      this.setState({ isImdbUrlValid: true });\n    }\n  }\n\n  validateOnBlurImgUrl = (event) => {\n    if (!pattern.test(event.target.value)) {\n      this.setState({ isImgUrlValid: false });\n    } else {\n      this.setState({ isImgUrlValid: true });\n    }\n  }\n\n  resetInputedData = () => {\n    this.setState(() => ({\n      newTitle: '',\n      newDescription: '',\n      newImgUrl: '',\n      newImdbUrl: '',\n      newImdbID: '',\n      buttonDisabled: true,\n      isTitleValid: true,\n      isImgUrlValid: true,\n      isImdbUrlValid: true,\n      isImdbIDValid: true,\n    }));\n  }\n\n  isButtonDisabled = () => {\n    if (this.state.newTitle.trim().length > 0\n      && pattern.test(this.state.newImgUrl) === true\n      && pattern.test(this.state.newImdbUrl) === true\n      && this.state.newImdbID.trim().length > 0\n    ) {\n      this.setState({ buttonDisabled: false });\n    } else {\n      this.setState({ buttonDisabled: true });\n    }\n  }\n\n  addMovie = (event) => {\n    event.preventDefault();\n    this.props.addMovie({\n      title: this.state.newTitle,\n      description: this.state.newDescription,\n      imgUrl: this.state.newImgUrl,\n      imdbUrl: this.state.newImdbUrl,\n      imdbId: this.state.newImdbID,\n    });\n\n    this.resetInputedData();\n  }\n\n  render() {\n    return (\n      <form className=\"form\" onChange={this.isButtonDisabled}>\n        <input\n          name=\"newTitle\"\n          placeholder=\"Title\"\n          onBlur={this.validateOnBlurTitle}\n          onChange={this.handleChange}\n          value={this.state.newTitle}\n          className={classNames(this.state.isTitleValid\n            ? 'form__title'\n            : 'form__title_false')\n          }\n        />\n        <span\n          hidden={this.state.isTitleValid}\n          className=\"form__title_false-alert\"\n        >\n          Please enter a title\n        </span>\n        <input\n          name=\"newDescription\"\n          placeholder=\"Description\"\n          onChange={this.handleChange}\n          value={this.state.newDescription}\n          className=\"form__description\"\n        />\n        <input\n          name=\"newImgUrl\"\n          placeholder=\"ImgUrl\"\n          onBlur={this.validateOnBlurImgUrl}\n          onChange={this.handleChange}\n          value={this.state.newImgUrl}\n          className={classNames(this.state.isImgUrlValid\n            ? 'form__imgUrl'\n            : 'form__imgUrl_false')\n          }\n        />\n        <span\n          hidden={this.state.isImgUrlValid}\n          className=\"form__imgUrl_false-alert\"\n        >\n          Please enter valid image link\n        </span>\n        <input\n          name=\"newImdbUrl\"\n          placeholder=\"ImdbUrl\"\n          onBlur={this.validateOnBlurImdbUrl}\n          onChange={this.handleChange}\n          value={this.state.newImdbUrl}\n          className={classNames(this.state.isImdbUrlValid\n            ? 'form__imdbUrl'\n            : 'form__imdbUrl_false')\n          }\n        />\n        <span\n          hidden={this.state.isImdbUrlValid}\n          className=\"form__imdbUrl_false-alert\"\n        >\n          Please enter valid IMDB link\n        </span>\n        <input\n          name=\"newImdbID\"\n          placeholder=\"ImdbID\"\n          onBlur={this.validateOnBlurImdbID}\n          onChange={this.handleChange}\n          value={this.state.newImdbID}\n          className={classNames(this.state.isImdbIDValid\n            ? 'form__imdbId'\n            : 'form__imdbId_false')\n          }\n        />\n        <span\n          hidden={this.state.isImdbIDValid}\n          className=\"form__imdbId_false-alert\"\n        >\n          Please enter IMDB id\n        </span>\n        <button\n          type=\"submit\"\n          onClick={this.addMovie}\n          disabled={this.state.buttonDisabled}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n      imdbId: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: [...moviesFromServer],\n  };\n\n  addMovie = (newMovie) => {\n    this.setState(({ movies }) => ({\n      movies: [...movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie movies={this.state.movies} addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}